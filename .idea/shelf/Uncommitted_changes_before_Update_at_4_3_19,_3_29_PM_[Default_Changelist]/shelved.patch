Index: app/src/main/java/com/example/findingbook/MapsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.findingbook;\n\nimport android.content.Intent;\nimport android.location.Address;\nimport android.location.Geocoder;\nimport android.os.Bundle;\nimport android.support.annotation.NonNull;\nimport android.support.design.widget.NavigationView;\nimport android.support.v4.view.GravityCompat;\nimport android.support.v4.widget.DrawerLayout;\nimport android.support.v7.app.ActionBar;\nimport android.support.v7.app.ActionBarDrawerToggle;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.Toolbar;\nimport android.util.Log;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.EditText;\n\nimport com.google.android.gms.maps.CameraUpdateFactory;\nimport com.google.android.gms.maps.GoogleMap;\nimport com.google.android.gms.maps.OnMapReadyCallback;\nimport com.google.android.gms.maps.SupportMapFragment;\nimport com.google.android.gms.maps.UiSettings;\nimport com.google.android.gms.maps.model.LatLng;\nimport com.google.android.gms.maps.model.Marker;\nimport com.google.android.gms.maps.model.MarkerOptions;\n\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.Locale;\n\npublic class MapsActivity extends AppCompatActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener, GoogleMap.OnMarkerClickListener {\n\n    private GoogleMap mMap;\n    private UiSettings mUiSettings;\n    private DrawerLayout drawer;\n    List<String> citiesList;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_maps);\n\n        Toolbar toolbar = findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n\n        ActionBar actionbar = getSupportActionBar();\n        actionbar.setDisplayHomeAsUpEnabled(true);\n        actionbar.setHomeAsUpIndicator(R.drawable.ic_menu);\n        drawer = (DrawerLayout) findViewById(R.id.drawer_layout);\n        if(drawer != null) {\n            ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\n            drawer.addDrawerListener(toggle);\n            toggle.syncState();\n        }\n\n        NavigationView navigationView = findViewById(R.id.nav_view);\n        navigationView.setNavigationItemSelectedListener(this);\n        // Obtain the SupportMapFragment and get notified when the map is ready to be used.\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\n                .findFragmentById(R.id.map);\n        mapFragment.getMapAsync(this);\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        if(drawer != null) {\n            switch (item.getItemId()) {\n                case android.R.id.home:\n                    drawer.openDrawer(GravityCompat.START);\n                    return true;\n            }\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n    @Override\n    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\n\n        DataLayerAccess dAccess = new DataLayerAccess(this);\n        citiesList = dAccess.getCities();\n        List<Address> addresses = null;\n        System.out.println(citiesList.get(0));\n\n        switch(menuItem.getItemId()) {\n            case R.id.nav_activeOne:\n                Log.d(\"Map Activity\", \"Active One Selected\");\n                Geocoder geocoder = new Geocoder(this);\n                for(int i = 0; i < 3; i++) {\n                    try {\n                        addresses = geocoder.getFromLocationName(citiesList.get(i), 1);\n\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                    //Placed a marker to address placed\n                    if (addresses != null && addresses.size() != 0) {\n                        Address address = addresses.get(0);\n                        LatLng latLng = new LatLng(address.getLatitude(), address.getLongitude());\n                        mMap.addMarker(new MarkerOptions().position(latLng).title(\"Entered Location\"));\n                    }\n                }\n                break;\n            case R.id.nav_activeTwo:\n                Log.d(\"Map Activity\", \"Active Two Selected\");\n                break;\n            case R.id.nav_activeThree:\n                Log.d(\"Map Activity\", \"Active Three Selected\");\n                break;\n        }\n        return true;\n    }\n\n    @Override\n    public void onBackPressed() {\n        if(drawer.isDrawerOpen(GravityCompat.START)){\n            drawer.closeDrawer(GravityCompat.START);\n        }else{\n            super.onBackPressed();\n        }\n    }\n\n    public void onMapSearch(View view) {\n        //Obtains the address from edit view\n        EditText entered_location = (EditText) findViewById(R.id.location_Entered);\n        String location = entered_location.getText().toString();\n        List<Address> addressList = null;\n\n        //Determines the Address from the input\n        if (location != null || !location.equals(\"\")) {\n            Geocoder geocoder = new Geocoder(this);\n            try {\n                addressList = geocoder.getFromLocationName(location, 1);\n\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n\n            //Placed a marker to address placed\n            Address address = addressList.get(0);\n            LatLng latLng = new LatLng(address.getLatitude(), address.getLongitude());\n            mMap.addMarker(new MarkerOptions().position(latLng).title(\"Entered Location\"));\n            mMap.animateCamera(CameraUpdateFactory.newLatLng(latLng));\n            mMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));\n\n        }\n    }\n\n    @Override\n    public void onMapReady(GoogleMap googleMap) {\n        mMap = googleMap;\n        mMap.setOnMarkerClickListener(this);\n\n\n        //Adds to the interaction with the map\n        mUiSettings = mMap.getUiSettings();\n        mUiSettings.setZoomControlsEnabled(true);\n        mUiSettings.setScrollGesturesEnabled(true);\n        mUiSettings.setZoomGesturesEnabled(true);\n\n\n        mMap.setOnMapLongClickListener(new GoogleMap.OnMapLongClickListener() {\n            @Override\n            public void onMapLongClick(LatLng point) {\n                MarkerOptions options = new MarkerOptions()\n                        .position(point);\n                Marker mMarker = mMap.addMarker(options);\n\n                Geocoder geocoder = new Geocoder(getApplicationContext(), Locale.getDefault());\n                try {\n                    List<Address> addresses = geocoder.getFromLocation(point.latitude, point.longitude, 1);\n                    if (addresses != null && addresses.size() > 0){\n                        System.out.println(\"Address: \" + addresses.get(0).toString());\n                    }\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n\n    }\n\n    public boolean onMarkerClick(final Marker marker){\n        LatLng latlng = marker.getPosition();\n        startActivity(new Intent(MapsActivity.this, PopupView.class).putExtra(\"POSITION\", \"Marker Position\"));\n        return false;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/findingbook/MapsActivity.java	(revision 37f3c2402f74f01f30167d0a263a9651d204fb40)
+++ app/src/main/java/com/example/findingbook/MapsActivity.java	(date 1554326869000)
@@ -17,6 +17,7 @@
 import android.view.View;
 import android.widget.EditText;
 
+import com.example.findingbook.dataLayer.DataLayerAccess;
 import com.google.android.gms.maps.CameraUpdateFactory;
 import com.google.android.gms.maps.GoogleMap;
 import com.google.android.gms.maps.OnMapReadyCallback;
